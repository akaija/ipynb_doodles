{
 "metadata": {
  "name": "",
  "signature": "sha256:7ee75dbba945a294b46f304f67d6239ad3707d3c1a0282e4c04096d48d82b459"
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "heading",
     "level": 1,
     "metadata": {},
     "source": [
      "This is an iPython notebook"
     ]
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "\n",
      "In this iPython notebook I will play around with the notebook's features as well as Scipy, NumPy, matplotlib and other librarys.\n"
     ]
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Solving quadratic equations"
     ]
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "\n",
      "First, let's create a script to solve quadratic equations..."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import numpy as np\n",
      "\n",
      "np.set_printoptions(precision = 4)\n",
      "def quadroot(a, b, c):\n",
      "#where a, b, and c refer to the second, first, and zero-order coefficients\n",
      "#of a quadratic equation, respectively.\n",
      "    if a == 0:\n",
      "        if np.not_equal(b,0):\n",
      "            #single root\n",
      "            r1 = -c / b\n",
      "            roots = np.array([r1])\n",
      "            print ('single root')\n",
      "        else:\n",
      "            #trivial solution\n",
      "            roots = ['n/a']\n",
      "            print ('trivial solution')\n",
      "    else:\n",
      "        d = b**2 - 4*a * c\n",
      "        if d >= 0:\n",
      "            #real roots\n",
      "            r1 = (-b + np.sqrt(d)) / (2*a)\n",
      "            r2 = (-b - np.sqrt(d)) / (2*a)\n",
      "            roots = np.array([r1, r2])\n",
      "            if r1 == r2:\n",
      "                print ('double root')\n",
      "        else:\n",
      "            #complex roots\n",
      "            real = -0.5*b/a\n",
      "            imag = np.sqrt(np.absolute(d)) / (2*a)\n",
      "            r1 = np.complex(real, imag)\n",
      "            r2 = np.complex(real, -imag)\n",
      "            roots = np.array([r1, r2])\n",
      "    print roots"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 1
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "The function should return a single root if the leading coefficient is zero.  We find this to be true when testing the following expression:\n",
      "$$ x + 1 $$\n",
      "In which case the root would be -1."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "quadroot(0, 1, 1)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "single root\n",
        "[-1]\n"
       ]
      }
     ],
     "prompt_number": 2
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "Therefore, the function returned the correct result!\n",
      "\n",
      "If an integer is evaluated, that is if the first two coefficients are zero, a primitive error message should be displayed."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "quadroot(0, 0, 1)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "trivial solution\n",
        "['n/a']\n"
       ]
      }
     ],
     "prompt_number": 3
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "The equation:\n",
      "$$ x^2 + 2x + 1$$\n",
      "will have two roots at -1."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "quadroot(1, 2, 1)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "double root\n",
        "[-1. -1.]\n"
       ]
      }
     ],
     "prompt_number": 4
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "While:\n",
      "$$x^2 + 2x + 4$$\n",
      "will have a complex solution."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "quadroot(1, 2, 4)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "[-1.+1.7321j -1.-1.7321j]\n"
       ]
      }
     ],
     "prompt_number": 5
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Solving systems of non-linear equations"
     ]
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "\n",
      "Now moving on to something more useful...\n",
      "\n",
      "Let's create a script that solves a system of non-linear equations using the Newton-Raphson Method.\n",
      "\n",
      "For this example we'll solve for the two non-linear equations, u and v:\n",
      "\n",
      "$$u(x_1, x_2) = \\frac{5 + x_1 + x_2}{(50 - 2x_1 - x_2)^2(20 - x1)} - 4 * 10^{-4}$$\n",
      "\n",
      "$$v(x_1, x_12) = \\frac{5 + x_1 + x_2}{(50 - 2x_1 - x_2)(10 - x_2)} - 3.7 * 10^{-2}$$\n",
      "\n",
      "First we'll define these two functions:"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "def u(x1,x2):\n",
      "    return (5 + x1 + x2) / (50 - 2 * x1 - x2)**2 / (20 - x1) - 0.0004\n",
      "        \n",
      "def v(x1,x2):\n",
      "    return (5 + x1 + x2) / (50 - 2 * x1 - x2) / (10 - x2) - 0.037"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 6
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "Next we'll provide a script that returns the Jacobian by taking the partial derivatives of the equations above.  This, however, is rather time consuming and may alternatively be represented by finitie differences in a manner similar to the secant method:"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "def jacob(a):\n",
      "    del_ = 0.000001\n",
      "    \n",
      "    f1 = u(a[0], a[1])\n",
      "    f2 = v(a[0], a[1])\n",
      "    f = np.array([f1,\n",
      "                  f2])\n",
      "        \n",
      "    df1dx1 = (u((a[0]+del_*a[0]), a[1])-u(a[0], a[1]))/(del_*a[0])\n",
      "    df1dx2 = (u(a[0], (a[1]+del_*a[1]))-u(a[0], a[1]))/(del_*a[1])\n",
      "    df2dx1 = (v((a[0]+del_*a[0]), a[1])-v(a[0], a[1]))/(del_*a[0])\n",
      "    df2dx2 = (v(a[0], (a[1]+del_*a[1]))-v(a[0], a[1]))/(del_*a[1])\n",
      "    \n",
      "    J = np.squeeze(np.array([[df1dx1, df1dx2],\n",
      "                  [df2dx1, df2dx2]]))\n",
      "    \n",
      "    return (J, f)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 7
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "The function above also generates vector, f, containing the values of u and v given x1 and x2.\n",
      "\n",
      "The single -equation Newton-Raphson method is:\n",
      "\n",
      "$$x_{i+1} = x_{i} - \\frac{f(x_i)}{f'(x_i0}$$\n",
      "\n",
      "Which can be implemented as a for loop using the equation below, once J and f are generated:\n",
      "\n",
      "$$\\{x_{i+1}\\} = \\{x_i\\} - [J]^{-1}\\{f\\}$$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "def newtmult(func, x0, es=0.001, maxit=1000):\n",
      "    #function = the name of the function that returns the Jacobian\n",
      "    #x0 = initial guess\n",
      "    #es = desired percent relative error, default: 0.001\n",
      "    #maxit = max allowable number of iterations, default: 1000\n",
      "    \n",
      "    iter = 0\n",
      "    x=x0\n",
      "    for i in range (0, maxit+1):\n",
      "        [J,f]=func(x)\n",
      "        dx = np.linalg.solve((J),f)\n",
      "        x = x - dx\n",
      "        i = i + 1\n",
      "        ea = 100*max(np.absolute(dx/x))\n",
      "        if i >= maxit or ea<=es: \n",
      "            break\n",
      "    #return (x, f, ea, i)\n",
      "    print  'roots:             x1 =   ', x[0], '     x2 =   ', x[1],\n",
      "    print'\\napprox relative %error:   ', ea,\n",
      "    print'\\nnumber of interations:    ', i"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 8
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "a = np.array([[1.5],[3.5]])\n",
      "\n",
      "newtmult(jacob, a, 0.000001, 1000)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "roots:             x1 =    [ 3.3366]      x2 =    [ 2.6772] \n",
        "approx relative %error:    [  2.2168e-09] \n",
        "number of interations:     5\n"
       ]
      }
     ],
     "prompt_number": 9
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "Using the initial guess: x1 = 1.5 and x2 = 3.5, find that after 5 iterations that x1 = 3.3366 and x2 = 2.6772 with an approximate relative error < 0.0000000022 %"
     ]
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Linear regression"
     ]
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "\n",
      "Let's use matplotlib to plot a series of data."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "x = np.array([10, 20, 30, 40, 50, 60, 70, 80])\n",
      "y = np.array([26, 68, 382, 560, 609, 1217, 834, 1456])\n",
      "\n",
      "import matplotlib.pyplot as plt\n",
      "%matplotlib inline\n",
      "plt.plot(x, y, 'bo', markersize=5)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "metadata": {},
       "output_type": "pyout",
       "prompt_number": 10,
       "text": [
        "[<matplotlib.lines.Line2D at 0x7f0f12c67490>]"
       ]
      },
      {
       "metadata": {},
       "output_type": "display_data",
       "png": "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\nXJWyoFgsUiwWa96+1h7/
RcD3CDN/gGsJB2/fBlwHHAJmANuByxj+ULgv3m8BVgNPVuzXHr+S0tfX\nf6K909nZan9fNam2x1/Pwd3vAB8hnMHTDZwTx38B3E8I+2mcfHB3IcMHdy/h1Fm/wS9JVao2+Gtt\n9QB8FPgqMBXYB9wOnAVsAO4kHMS9Oa47EMcHCAeCl/P6bSBpTAqFfnp6woy5o6OVpUudMUujqWfG\nPxGc8WvMPB1SChp1OqfUdJ4OKdXG4JekxBj8yqyOjlZaWno5fuawp0NKY2OPX5nm6ZBSY0/nnAgG\nvyRVyYO7kqTXZfBLUmIMfklKjMEvSYkx+CUpMQa/JCXG4JekxBj8kpQYg1+SEmPwS1JiDH5JSozB\nL0mJMfglKTEGvyQlpt7gPwt4GtgcH7cA24AXga3AtLJ1VwJ7gN1AW52vK0mqUb3BfxcwQLgEEsAK\nQvDPB74VHwMsAG6J94uAB8fhtSVJNagnfGcDfwZ8ieELANwI9MblXuCmuLwYWA8cAfYDe4GFdby2\nJKlG9QT/PwOfAI6VjU0HDsflw/ExwExgsGy9QWBWHa8tSarRlBq3+xDwCqG/nz/NOkMMt4BO9/wp\nuru7Tyzn83ny+dPtXuOhUOinpydcs7ajo5WlS71mrTTZFYtFisVizdvXes3dTwPLgKPAm4HfAx4F\nriJ8EBwCZgDbgcsY7vXfF++3AKuBJyv26zV3G6hQ6Ker6yClUjsALS29rFkzwwuWSxnTqGvurgIu\nBuYCtwLfJnwQbALa4zrtwMa4vCmuNzVucymws8bX1jjp6dkRQz8H5CiV2lm7dkezy5I0wWpt9VQ6\nPk2/D9gA3Ek4iHtzHB+I4wOE3xKW8/ptIEnSBKm11TNRbPU0kK0e6cxQbavH4E9cX1//ifZOZ2er\noS9lkMEvSYlp1MFdSVJGGfySlBiDX5ISY/BLUmIMfklKjMEvSYkx+CUpMQa/JCXG4JekxBj8kpQY\ng1+SEmPwS1JiDH5JSozBL0mJMfglKTEGvyQlptbgvxjYDjwP/Bj4WBxvAbYBLwJbgWll26wE9gC7\ngbYaX1eSVKdar8B1Ubw9A5wL7AJuAm4HXgUeAO4GLgBWAAuAR4CrgFnA48B84FjFfr0ClyRVqVFX\n4DpECH2A/wZeIAT6jUBvHO8lfBgALAbWA0eA/cBeYGGNry1JqsN49PjnAO8CngSmA4fj+OH4GGAm\nMFi2zSDhg0KS1GD1Bv+5wNeBu4DfVDw3FG+nY09HkppgSh3bvpEQ+l8BNsaxw4Te/yFgBvBKHD9A\nOCB83Ow4doru7u4Ty/l8nnw+X0eJknTmKRaLFIvFmrev9eBujtDD/wXwt2XjD8Sx+wkHdadx8sHd\nhQwf3L2EU2f9HtyVpCpVe3C31uC/FvgO8COGw3slsBPYAPwB4SDuzcAv4/OrgDuAo4TWUP8I+zX4\nJalKjQr+iWLwS1KVGnU6pyQpowx+SUqMwS9JiTH4JSkxBr8kJcbgl6TEGPySlBiDX5ISY/BLUmIM\nfklKjMEvSYkx+MdBodBPW9sq2tpWUSiM9LfnJGnyqOfv8YsQ+l1dBymV7gVg165ecrl+liy5ocmV\nSdLInPHXqadnB6VSO+EP4+UoldpZu3ZHs8uSpNMy+CUpMQZ/nTo6Wmlp6eX4JYZbWnrp7GxtdlmS\ndFpeiGUc9PX1n2jvdHa22t+X1FCZvwLXhg1bWLrU4JSkscr8Fbi6ug7S1+cpkZI0URod/IuA3cAe\n4O6RVvCsGEmaWI0M/rOAfyGE/wLgNuDyBr7+hCsWi80uoWZZrh2sv9msP1saGfwLgb3AfuAI8O/A\n4sqVsnxWTJa/ebJcO1h/s1l/tjQy+GcBL5c9HoxjJ1mzZoZnxUjSBGpk8I/pPE1DX5ImViNP57wG\n6Cb0+AFWAseA+8vW2QvMa2BNknQm2Adc0uwiRjKFUNwcYCrwDGfYwV1J0qk+CPwnYWa/ssm1SJIk\nSZoo64DDwHNlYy3ANuBFYCswrQl1jdXFwHbgeeDHwMfieFbew5uBJwnttgHgH+J4Vuo/7izgaWBz\nfJyl+vcDPyLUvzOOZaX+aUAf8ALh++dqslP7HxK+5sdvvyL8/GalfgjdkucJ+fkI8CYyUv97gXdx\ncvA/AHwyLt8N3NfooqpwEfDOuHwuoX11Odl6D+fE+ynA94FryVb9AH8HfBXYFB9nqf6fEn5Yy2Wl\n/l7gjrg8BTif7NRe7g3AQcJELiv1zwF+Qgh7gK8B7WSnfuZwcvDvBqbH5Yvi46zYCHyAbL6Hc4Cn\ngLeTrfpnA48D1zE8489S/T8F3loxloX6zycET6Us1F6pDXgiLmel/hbCRPMCwofuZuB6slP/KcH/\nWtlyruLxZDYHeAk4j2y9hzcQWj2/IcwWIFv1Fwi/NbYyHPxZqv8nhFbDD4COOJaF+t9JaBM+BPwQ\n6AHeQjZqr7QOWB6Xs1R/J+Hn9hXgK3Gsqvon3V/njIYY43/4arJzga8DdxH+IcpN9vdwjPBDPBt4\nH2HmXG4y1/8hwjf905z+/6JM5voB/oTwwfVB4K8J7c9yk7X+KcC7gQfj/f8AKyrWmay1l5sK/AVh\nAlFpMtc/D/g4YcI5k5BBH65YZ9T6J1PwHyb8igIwg/CDPZm9kRD6XyG0eiB77wHCwa1vAleSnfr/\nGLiR0C5ZD7yf8O+Qlfoh9JYBfg58g/C3rLJQ/2C8PRUf9xE+AA4x+Wsv90FgF+HrD9n42gO8B/gu\n8AvgKPAo8EdU+fWfTMG/iXCQgni/8XXWbbYc8G+EMxo+WzaelfdwIcNH/c8m9AifJjv1ryIckJsL\n3Ap8G1hGduo/h9AahNAmaSO0PbNQ/yHC39yaHx9/gHCGyWYmf+3lbiNMGo7LwtceQu/+GsLPbY7w\n9R8gI1//9cDPgN8RvoluJxy0eJxJfjpSdC2hVfIMw6eFLSI77+EKQn/2GcIphZ+I41mpv1wrw2f1\nZKX+uYSv/TOE04GP/2fGrNT/DsKM/1nCjPN8slM7hA/bVxn+8IVs1f9Jhk/n7CV0H7JUvyRJkiRJ\nkiRJkiRJkiRJkiRJkiSduf4fmGuiyZvhFUoAAAAASUVORK5CYII=\n",
       "text": [
        "<matplotlib.figure.Figure at 0x7f0f12f71810>"
       ]
      }
     ],
     "prompt_number": 10
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "The following script will attempt to generate a line of best fit, given x and y values."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "def linregr(x,y):\n",
      "    n = len(x)\n",
      "    \n",
      "    if n != len(y):\n",
      "        print ('dim mismatch')\n",
      "    \n",
      "    x1 = (np.mat(x)).transpose()\n",
      "    y1 = (np.mat(y)).transpose()\n",
      "    sx = x1.sum()\n",
      "    sy = y1.sum()\n",
      "    sx2 = (np.multiply(x1, x1)).sum()\n",
      "    sxy = (np.multiply(x1, y1)).sum()\n",
      "    sy2 = (np.multiply(y1, y1)).sum()\n",
      "    a1 = (n*sxy-sx*sy)/(n*sx2-sx**2)\n",
      "    a = np.array([a1, (sy/n - a1*sx/n)])\n",
      "    r2 = ((n*sxy-sx*sy)/np.math.sqrt(n*sx2-sx**2)/np.math.sqrt(n*sy2-sy**2))**2\n",
      "    xp = np.linspace(x1.min(), x1.max(), 2)\n",
      "    yp = a[0]*xp + a[1]\n",
      "\n",
      "    print 'r2 = ', r2\n",
      "    %matplotlib inline\n",
      "    plt.plot(x, y, 'bo', xp, yp, 'r--')\n",
      "    "
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 11
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "Running the script with the previous data series:"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "linregr(x, y)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "r2 =  0.881714577875\n"
       ]
      },
      {
       "metadata": {},
       "output_type": "display_data",
       "png": "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\nRBqjpgby8mDQIIhE4Mc/
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\nYII=\n",
       "text": [
        "<matplotlib.figure.Figure at 0x7f0f19612750>"
       ]
      }
     ],
     "prompt_number": 12
    },
    {
     "cell_type": "heading",
     "level": 1,
     "metadata": {},
     "source": [
      "Multiple linear regression"
     ]
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "\n",
      "Let's try multiple linear regression!  This would generate a plane as oppose to a line of best fit.  We'll use the following data:"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "data = np.array([[0, 0, 5], \n",
      "                 [2, 1, 10], \n",
      "                 [2.5, 2, 9], \n",
      "                 [1, 3, 0], \n",
      "                 [4, 6, 3], \n",
      "                 [7, 2, 27]])\n",
      "\n",
      "x = data[:, 0]\n",
      "y = data[:, 1]\n",
      "z = data[:, 2]\n",
      "\n",
      "%matplotlib\n",
      "from mpl_toolkits.mplot3d import Axes3D\n",
      "\n",
      "fig = plt.figure()\n",
      "ax = fig.add_subplot(111, projection='3d')\n",
      "\n",
      "ax.plot(x, y, z, 'bo')\n",
      "\n",
      "ax.azim = 45\n",
      "ax.elev = 45"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Using matplotlib backend: Qt4Agg\n"
       ]
      },
      {
       "metadata": {},
       "output_type": "display_data",
       "png": "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\nw3CJbyW4pIvObmPnnXceFi9ejGg0WvR3ejx0/
fr1wzfffIMDDzxQ2MNPmiXQeZOJSBCRXMFrlWrg\n+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\ndBL+/Oc/C60mS6VSGDFihNLE/
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\nncOrctFd4JYBuzCNbdu2dfGb7s4G/z59+qB///
7YuHEjBg0ahJdffhmHH36408ty0U3garouXBjA\nBx98gEsvvRSZTAYHHXQQHnroIde94EJBOU3XhQsXLly4cOHChQsXLlzYjR4AngCwAcCnAMyWfB0C\n4H3mf20Afm3ymC5cuHCx22A5gEv+/3/7AIgUTT0AWgD0F3hMFy5cuOi2qAdgZclXI4C1Fh7fhQtV\nuD5dF9WKgQD+DeAhAOsA3AdAZMnXfwF4RODxXLhw4aJbYyiALIAf//8//w7ATYKOHUAnoe8r6Hgu\nXGjG/wNHYvY/9kP5xwAAAABJRU5ErkJggg==\n",
       "text": [
        "<matplotlib.figure.Figure at 0x7f0f12b4f810>"
       ]
      }
     ],
     "prompt_number": 13
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "The following script will return (xp, yp, zp), coordinates for the plane of best fit."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "def multlinregr(x, y, z):\n",
      "    n = len(x)\n",
      "    sx = x.sum()\n",
      "    sy = y.sum()\n",
      "    sz = z.sum()\n",
      "    sx2 = (x**2).sum()\n",
      "    sy2 = (y**2).sum()\n",
      "    sxy = (x*y).sum()\n",
      "    sxz = (x*z).sum()\n",
      "    syz = (y*z).sum()\n",
      "\n",
      "    A = np.array([[n, sx, sy],\n",
      "                  [sx, sx2, sxy],\n",
      "                  [sy, sxy, sy2]])\n",
      "\n",
      "    B = np.array([[sz],\n",
      "                  [sxz],\n",
      "                  [syz]])\n",
      "\n",
      "    coef = np.linalg.solve(A,B)\n",
      "                       \n",
      "    xp = np.arange(x.min(),(1+x.max()),0.5)\n",
      "    yp = np.arange(y.min(),(1+y.max()),(((1+y.max())-y.min())/len(xp)))\n",
      "    xp, yp = np.meshgrid(xp, yp)\n",
      "    zp = coef[0] + coef[1]*xp + coef[2]*yp\n",
      "\n",
      "    return (xp, yp, zp)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 14
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "Now to input the original data into the script and plot the resulting surface..."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "(xp, yp, zp) = multlinregr(x, y, z)\n",
      "\n",
      "%matplotlib inline\n",
      "from mpl_toolkits.mplot3d import Axes3D\n",
      "from matplotlib import cm\n",
      "\n",
      "fig = plt.figure()\n",
      "ax = fig.add_subplot(111, projection='3d')\n",
      "\n",
      "\n",
      "ax.plot_surface(xp, yp, zp, rstride=1, cstride=1, cmap=cm.Greys,\n",
      "        linewidth=0, antialiased=False)\n",
      "ax.plot(x, y, z, 'bo')\n",
      "\n",
      "ax.azim = 45\n",
      "ax.elev = 45"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "metadata": {},
       "output_type": "display_data",
       "png": "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\ns846C08++SQA4Mknn8TZZ5/
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\nDOg3S/
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\nM04mkxXTGAG0cNI9//
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\ncOKJJ+Laa69Fq1atpGiAcmNa2ya1Vl2jr49GWVslXzPRkp3kKydbJbOVYDBYFH3a6aehtKsB0MTo\nxW69K/k7sGb85LFRChMn8pagzyeZTDbx1AiHw8hms3jyySexYMECjBo1Cu+99x73jDeR661UNKtC\nWqdOnbBhwwbp7xs2bEDnzp1Luga3241zzz0X77//Pnr16oVzzjkHM2fORDKZRE1NDfx+P+LxOKLR\naJMiBEWSVIwTVZAiogwGg4aKfaQSiEQiyOfzqK6uRigUMhQxsQW3fD6PSCQiVamNIpfLSQUcj8eD\ncDis2a5rtOhlBPRgjEajUhqH/awo+gyHw/B6vYjH40IKT1rroYdbPp9HTU0NamtrUVVVJT14SlHg\ndblcUjedx+ORdkbPPfccotEonnvuOZx22mloaGjA8uXLMXHixJITLlAZXKGGZlVIy2azOPjgg/H2\n229jv/32Q58+fUqaHFdb09NPP41HHnkEw4YNwxVXXIFQKNSkh5yiA7vs7wjlFuWbaXQQNWdLXvQy\nU0xSi2x5GkXoM6c8sIjPWG5rqCTlKoVJPkHJq2Hnzp24+uqrsWLFCvTu3RsLFizAgQceKPzaRlBu\nrmgxkjGv14t58+Zh8ODBOPTQQzFy5MiyJ8a9Xi9+97vfYeXKlWjbti3OOOMMPPLII8jn88jlcvj+\n++8Ri8WQSqVQVVWF6upqW311aRtYXV1dFAVlMhlJ92uH1IpgJPLNZrNSZOv1ehEOhy2lJ4jsyDYy\nGo1yS670Ils9UO4zHA7D7/cjkUggFouZlvixkW02m9XchdBnTp9nJpNBJBKRSFgElGR6fr8fb7zx\nBi688EIcccQRePfdd3H44YejT58++Oabb4Rc1ywqkSsIzSrSbQ5IJpO477778OijjyIajeLKK6/E\nlClTpAjQ7q4fOZSMVkrh8k9QinxFz4lTA4/gn41szRRDta5tRnKlZGto5rMSNSVEqckCAN5++23c\nd999OProozF58mS0b99e+p0tW7agffv2lt/DSy65BK+//jratWuHL7/80tK5Sg2nI00GOz/MOXPm\n4K677sLw4cPRsWNHLF26FJdccomkSbSz60cOOeGR275IcjGyFra7rqqqqmRt1Urk63a7bSFbpWvz\npCtEka0cZn0tlHS/LpcL77//PmbNmoUePXrgpptusjVP+v7776OmpgZjxoxxSLe5w84P81//+hc6\n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\n",
       "text": [
        "<matplotlib.figure.Figure at 0x7f0f12a5de50>"
       ]
      }
     ],
     "prompt_number": 15
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "And from another angle...\n",
      "\n",
      "(if the click+drag feature isn't working)"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "#%matplotlib\n",
      "from mpl_toolkits.mplot3d import Axes3D\n",
      "from matplotlib import cm\n",
      "\n",
      "fig = plt.figure()\n",
      "ax = fig.add_subplot(111, projection='3d')\n",
      "\n",
      "\n",
      "ax.plot_surface(xp, yp, zp, rstride=1, cstride=1, cmap=cm.Greys,\n",
      "        linewidth=0, antialiased=False)\n",
      "ax.plot(x, y, z, 'bo')\n",
      "\n",
      "ax.azim = 40\n",
      "ax.elev = 10"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "metadata": {},
       "output_type": "display_data",
       "png": "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\nx+/397mBeHui0eJDOgDxlIC+nYYch/
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\n4+TwwLXXXttniazZWbZsGe6++27cdNNNmj/
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
g9XrhdruxZcsWU253LjAO\nwtMV9Dv0jJ+WlZXhpptuwvTp03HeeecBAFasWKHLsQUDkwG3c4Sgf+PxeDBmzBjU1taK4bwgY6jt\nHCFEVyAQCHRGTXRFeEEgEAjSiBBdgUAgSCNCdAUCgSCNCNEVCASCNCJEVyAQCNKIEF2BQCBII0J0\nBQKBII0I0RUIBII0IkRXIBAI0ogQXYFAIEgjQnQFAoEgjQjRFQgEgjQiRFcgEAjSiBBdgUAgEAgE\nAoFAIBAIBAKBQCAQCAQCgUAgEAgEAoFAIBAIBAKBQH/+H4WvGFsyF77QAAAAAElFTkSuQmCC\n",
       "text": [
        "<matplotlib.figure.Figure at 0x7f0f12b60050>"
       ]
      }
     ],
     "prompt_number": 26
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [],
     "language": "python",
     "metadata": {},
     "outputs": []
    }
   ],
   "metadata": {}
  }
 ]
}
